@model SanalogMarket.Models.ProductCode

@{
    ViewBag.Title = "Yeni";
}

<h2>Publish Products</h2>







    @using (Html.BeginForm("Category_index", "ProductCode", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select id="category" name="category"></select>
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SubCategory, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select id="subcategory" name="subcategory"></select>

                    @Html.ValidationMessageFor(model => model.SubCategory, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Icon, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="fileIcon" value="Publish Project Icon" class="btn btn-warning" />
                    @Html.ValidationMessageFor(model => model.Icon, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Screenshot, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="file" value="Publish Screenshot" class="btn btn-warning" />
                    @Html.ValidationMessageFor(model => model.Screenshot, "", new { @class = "text-danger" })
                    @ViewBag.FotoError
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Filepath, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="fileproject" value="Publish file" class="btn btn-warning" />
                    @Html.ValidationMessageFor(model => model.Filepath, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 ">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" }, })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 ">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" }, })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Publish Product" class="btn btn-success" />
                </div>
            </div>
        </div>



    }


    @section scripts {
        <script type="text/javascript">
        $(document)
            .ready(function() {
                // Get a list of categories and a list of products of the first category.
                $.getJSON('/ProductCode/GetCategories',
                        null,
                        function(data) {
                            $.each(data,
                                function() {
                                    $('#category')
                                        .append('<option value=' +
                                            this.ID +
                                            '>' +
                                            this.Name +
                                            '</option>');
                                });
                            $.getJSON('/ProductCode/GetProducts',
                                    { intCatID: $('#category').val() },
                                    function(data) {
                                        $.each(data,
                                            function() {
                                                $('#subcategory')
                                                    .append('<option value=' +
                                                        this.ID +
                                                        '>' +
                                                        this.Name +
                                                        '</option>');
                                            });
                                    })
                                .fail(function(jqXHR, textStatus, errorThrown) {
                                    alert('Error getting products!');
                                });
                        })
                    .fail(function(jqXHR, textStatus, errorThrown) {
                        alert('Error getting categories!');
                    });

                // Dropdown list change event.
                $('#category')
                    .change(function() {
                        $('#subcategory option').remove();
                        $.getJSON('/ProductCode/GetProducts',
                                { intCatID: $('#category').val() },
                                function(data) {
                                    $.each(data,
                                        function() {
                                            $('#subcategory')
                                                .append('<option value=' +
                                                    this.ID +
                                                    '>' +
                                                    this.Name +
                                                    '</option>');
                                        });
                                })
                            .fail(function(jqXHR, textStatus, errorThrown) {
                                alert('Error getting products!');
                            });
                    });
            });
        </script>}

